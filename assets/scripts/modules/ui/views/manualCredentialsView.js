import { api_request } from '../../api.js';
import { unified_state, updateUnifiedState } from '../../state/store.js';
import { ensureToast } from '../toast.js';
import { show_global_spinner, hide_global_spinner } from '../spinner.js';
import { escapeHtml } from '../../utils.js';

const { __ } = window.wp?.i18n ?? { __: (text) => text };

/**
 * Handles the submission of the manual credentials form.
 * @param {SubmitEvent} event - The form submission event.
 * @param {Function} fetchConnectionStatus - Callback to refresh connection status after saving.
 */
export const onSubmitManualForm = async (event, fetchConnectionStatus) => {
    event.preventDefault();

    const toast = await ensureToast();
    const form = event.currentTarget;
    const selectedAppId = unified_state.get().selectedAppId;

    if (!selectedAppId) {
        toast(__('Select an app before saving credentials.', 'wp2-update'), 'error');
        return;
    }

    const formData = new FormData(form);
    formData.set('app_uid', selectedAppId);

    const payload = Object.fromEntries(formData.entries());

    updateUnifiedState({ isProcessing: true });
    show_global_spinner();

    try {
        const response = await api_request('save-credentials', {
            method: 'POST',
            body: payload,
        });

        toast(__('Credentials saved successfully.', 'wp2-update'), 'success');

        if (response?.requires_installation) {
            toast(__('Install the GitHub App, then return here to continue.', 'wp2-update'), 'info');
        }

        form.reset();
        await fetchConnectionStatus?.();
    } catch (error) {
        console.error('Failed to save credentials', error);
        toast(error.message || __('Failed to save credentials.', 'wp2-update'), 'error');
    } finally {
        hide_global_spinner();
        updateUnifiedState({ isProcessing: false });
    }
};

/**
 * Renders the ManualCredentialsView component.
 * Displays a form for entering credentials manually.
 * @param {object} state - The current dashboard state.
 * @returns {string} - HTML string for the ManualCredentialsView.
 */
export const renderManualCredentialsForm = (state = {}) => {
    const selectedApp = state.apps?.find((app) => app.id === state.selectedAppId);
    const heading = selectedApp
        ? __('Enter GitHub App Credentials', 'wp2-update') + ` â€“ ${escapeHtml(selectedApp.name)}`
        : __('Enter GitHub App Credentials', 'wp2-update');
    const accountType = selectedApp?.account_type === 'organization' ? 'organization' : 'user';
    const organizationValue = selectedApp?.organization ?? '';

    return `
        <div class="wp2-manual-config">
            <h2>${heading}</h2>
            <p>${__('Paste the credentials generated by GitHub for this App.', 'wp2-update')}</p>
            <form id="wp2-manual-configure-form" class="wp2-form">
                <input type="hidden" name="app_uid" value="${escapeHtml(state.selectedAppId ?? '')}" />

                <div class="wp2-field-group">
                    <label for="wp2-manual-app-name">${__('App Display Name', 'wp2-update')}</label>
                    <input type="text" id="wp2-manual-app-name" name="wp2_app_name" value="${escapeHtml(selectedApp?.name ?? '')}" required />
                </div>

                <div class="wp2-field-group">
                    <label for="wp2-app-id">${__('GitHub App ID', 'wp2-update')}</label>
                    <input type="number" id="wp2-app-id" name="wp2_app_id" min="1" required />
                </div>

                <div class="wp2-field-group">
                    <label for="wp2-installation-id">${__('Installation ID', 'wp2-update')}</label>
                    <input type="number" id="wp2-installation-id" name="wp2_installation_id" min="0" required />
                    <p class="wp2-field-help">${__('Use 0 if the app has not been installed yet.', 'wp2-update')}</p>
                </div>

                <div class="wp2-field-group">
                    <label for="wp2-private-key">${__('Private Key (PEM)', 'wp2-update')}</label>
                    <textarea id="wp2-private-key" name="wp2_private_key" rows="8" spellcheck="false" required></textarea>
                </div>

                <div class="wp2-field-group">
                    <label for="wp2-webhook-secret">${__('Webhook Secret', 'wp2-update')}</label>
                    <input type="text" id="wp2-webhook-secret" name="wp2_webhook_secret" minlength="10" required />
                </div>

                <div class="wp2-field-group">
                    <label for="wp2-encryption-key-manual">${__('Encryption Key', 'wp2-update')}</label>
                    <input type="text" id="wp2-encryption-key-manual" name="encryption_key" minlength="16" required />
                </div>

                <div class="wp2-field-group">
                    <label for="wp2-app-slug">${__('App Slug', 'wp2-update')}</label>
                    <input type="text" id="wp2-app-slug" name="wp2_app_slug" />
                </div>

                <div class="wp2-field-group">
                    <label for="wp2-app-html-url">${__('App HTML URL', 'wp2-update')}</label>
                    <input type="url" id="wp2-app-html-url" name="wp2_app_html_url" placeholder="https://github.com/apps/example" />
                </div>

                <div class="wp2-field-group">
                    <label for="wp2-manual-account-type">${__('Account Type', 'wp2-update')}</label>
                    <select id="wp2-manual-account-type" name="account_type">
                        <option value="user"${accountType === 'user' ? ' selected' : ''}>${__('User', 'wp2-update')}</option>
                        <option value="organization"${accountType === 'organization' ? ' selected' : ''}>${__('Organization', 'wp2-update')}</option>
                    </select>
                </div>

                <div class="wp2-field-group wp2-org-field"${accountType === 'organization' ? '' : ' hidden'}>
                    <label for="wp2-manual-org">${__('Organization Slug', 'wp2-update')}</label>
                    <input type="text" id="wp2-manual-org" name="organization" value="${escapeHtml(organizationValue)}" />
                </div>

                <div class="wp2-actions">
                    <button type="submit" class="wp2-button wp2-button--primary">
                        ${__('Save Credentials', 'wp2-update')}
                    </button>
                    <button type="button" id="wp2-cancel-config" class="wp2-button">
                        ${__('Cancel', 'wp2-update')}
                    </button>
                </div>
            </form>
        </div>
    `;
};
